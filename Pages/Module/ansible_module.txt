add_host module – Add a host (and alternatively a group) to the ansible-playbook in-memory inventory
all
apt module – Manages apt-packages
apt_key module – Add or remove an apt key
apt_repository module – Add and remove APT repositories
assemble module – Assemble configuration files from fragments
assert module – Asserts given expressions are true
async_status module – Obtain status of asynchronous task
blockinfile module – Insert/update/remove a text block surrounded by marker lines
command module – Execute commands on targets
copy module – Copy files to remote locations
cron module – Manage cron.d and crontab entries
deb822_repository module – Add and remove deb822 formatted repositories
debconf module – Configure a .deb package
debug module – Print statements during execution
dnf module – Manages packages with the dnf package manager
dnf5 module – Manages packages with the dnf5 package manager
dpkg_selections module – Dpkg package selection selections
expect module – Executes a command and responds to prompts
fail module – Fail with custom message
fetch module – Fetch files from remote nodes
file module – Manage files and file properties
find module – Return a list of files based on specific criteria
gather_facts module – Gathers facts about remote hosts
get_url module – Downloads files from HTTP, HTTPS, or FTP to node
getent module – A wrapper to the unix getent utility
git module – Deploy software (or files) from git checkouts
group module – Add or remove groups
group_by module – Create Ansible groups based on facts
hostname module – Manage hostname
import_playbook module – Import a playbook
import_role module – Import a role into a play
import_tasks module – Import a task list
include_role module – Load and execute a role
include_tasks module – Dynamically include a task list
include_vars module – Load variables from files, dynamically within a task
iptables module – Modify iptables rules
known_hosts module – Add or remove a host from the known_hosts file
lineinfile module – Manage lines in text files
meta module – Execute Ansible ‘actions’
package module – Generic OS package manager
package_facts module – Package information as facts
pause module – Pause playbook execution
ping module – Try to connect to host, verify a usable python and return pong on success
pip module – Manages Python library dependencies
raw module – Executes a low-down and dirty command
reboot module – Reboot a machine
replace module – Replace all instances of a particular string in a file using a back-referenced regular expression
rpm_key module – Adds or removes a gpg key from the rpm db
script module – Runs a local script on a remote node after transferring it
service module – Manage services
service_facts module – Return service state information as fact data
set_fact module – Set host variable(s) and fact(s).
set_stats module – Define and display stats for the current ansible run
setup module – Gathers facts about remote hosts
shell module – Execute shell commands on targets
slurp module – Slurps a file from remote nodes
stat module – Retrieve file or file system status
subversion module – Deploys a subversion repository
systemd_service module – Manage systemd units
sysvinit module – Manage SysV services.
tempfile module – Creates temporary files and directories
template module – Template a file out to a target host
unarchive module – Unpacks an archive after (optionally) copying it from the local machine
uri module – Interacts with webservices
user module – Manage user accounts
validate_argument_spec module – Validate role argument specs.
wait_for module – Waits for a condition before continuing
wait_for_connection module – Waits until remote system is reachable/usable
yum module – Manages packages with the yum package manager
yum_repository module – Add or remove YUM repositories
runas become – Run As user
su become – Substitute User
sudo become – Substitute User DO
jsonfile cache – JSON formatted files.
memory cache – RAM backed, non persistent
default callback – default Ansible screen output
junit callback – write playbook output to a JUnit file.
minimal callback – minimal Ansible screen output
oneline callback – oneline Ansible screen output
tree callback – Save host events to files
local connection – execute on controller
paramiko_ssh connection – Run tasks via Python SSH (paramiko)
psrp connection – Run tasks over Microsoft PowerShell Remoting Protocol
ssh connection – connect via SSH client binary
winrm connection – Run tasks over Microsoft’s WinRM
b64decode filter – Decode a base64 string
b64encode filter – Encode a string as base64
basename filter – get a path’s base name
bool filter – cast into a boolean
checksum filter – checksum of input data
combinations filter – combinations from the elements of a list
combine filter – combine two dictionaries
comment filter – comment out a string
commonpath filter – gets the common path
dict2items filter – Convert a dictionary into an itemized list of dictionaries
difference filter – the difference of one list from another
dirname filter – get a path’s directory name
expanduser filter – Returns a path with ~ translation.
expandvars filter – expand environment variables
extract filter – extract a value based on an index or key
fileglob filter – explode a path glob to matching files
flatten filter – flatten lists within a list
from_json filter – Convert JSON string into variable structure
from_yaml filter – Convert YAML string into variable structure
from_yaml_all filter – Convert a series of YAML documents into a variable structure
hash filter – hash of input data
human_readable filter – Make bytes/bits human readable
human_to_bytes filter – Get bytes from string
intersect filter – intersection of lists
items2dict filter – Consolidate a list of itemized dictionaries into a dictionary
log filter – log of (math operation)
mandatory filter – make a variable’s existance mandatory
md5 filter – MD5 hash of input data
normpath filter – Normalize a pathname
password_hash filter – convert input password into password_hash
path_join filter – Join one or more path components
permutations filter – permutations from the elements of a list
pow filter – power of (math operation)
product filter – cartesian product of lists
quote filter – shell quoting
random filter – random number or list item
realpath filter – Turn path into real path
regex_escape filter – escape regex chars
regex_findall filter – extract all regex matches from string
regex_replace filter – replace a string via regex
regex_search filter – extract regex match from string
rekey_on_member filter – Rekey a list of dicts into a dict using a member
relpath filter – Make a path relative
root filter – root of (math operation)
sha1 filter – SHA-1 hash of input data
shuffle filter – randomize a list
split filter – split a string into a list
splitext filter – split a path into root and file extension
strftime filter – date formating
subelements filter – returns a product of a list and its elements
symmetric_difference filter – different items from two lists
ternary filter – Ternary operation filter
to_datetime filter – Get datetime from string
to_json filter – Convert variable to JSON string
to_nice_json filter – Convert variable to ‘nicely formatted’ JSON string
to_nice_yaml filter – Convert variable to YAML string
to_uuid filter – namespaced UUID generator
to_yaml filter – Convert variable to YAML string
type_debug filter – show input data type
union filter – union of lists
unique filter – set of unique items of a list
unvault filter – Open an Ansible Vault
urldecode filter – Decode percent-encoded sequences
urlsplit filter – get components from URL
vault filter – vault your secrets
win_basename filter – Get a Windows path’s base name
win_dirname filter – Get a Windows path’s directory
win_splitdrive filter – Split a Windows path by the drive letter
zip filter – combine list elements
zip_longest filter – combine list elements, with filler
advanced_host_list inventory – Parses a ‘host list’ with ranges
auto inventory – Loads and executes an inventory plugin specified in a YAML config
constructed inventory – Uses Jinja2 to construct vars and groups based on existing inventory.
generator inventory – Uses Jinja2 to construct hosts and groups from patterns
host_list inventory – Parses a ‘host list’ string
ini inventory – Uses an Ansible INI file as inventory source.
script inventory – Executes an inventory script that returns JSON
toml inventory – Uses a specific TOML file as an inventory source.
yaml inventory – Uses a specific YAML file as an inventory source.
config lookup – Lookup current Ansible configuration values
csvfile lookup – read data from a TSV or CSV file
dict lookup – returns key/value pair items from dictionaries
env lookup – Read the value of environment variables
file lookup – read file contents
fileglob lookup – list files matching a pattern
first_found lookup – return first file found from list
indexed_items lookup – rewrites lists to return ‘indexed items’
ini lookup – read data from an ini file
inventory_hostnames lookup – list of inventory hosts matching a host pattern
items lookup – list of items
lines lookup – read lines from command
list lookup – simply returns what it is given.
nested lookup – composes a list with nested elements of other lists
password lookup – retrieve or generate a random password, stored in a file
pipe lookup – read output from a command
random_choice lookup – return random element from list
sequence lookup – generate a list based on a number sequence
subelements lookup – traverse nested key from a list of dictionaries
template lookup – retrieve contents of file after templating with Jinja2
together lookup – merges lists into synchronized list
unvault lookup – read vaulted file(s) contents
url lookup – return contents from URL
varnames lookup – Lookup matching variable names
vars lookup – Lookup templated value of variables
cmd shell – Windows Command Prompt
powershell shell – Windows PowerShell
sh shell – POSIX shell (/bin/sh)
debug strategy – Executes tasks in interactive debug session.
free strategy – Executes tasks without waiting for all hosts
host_pinned strategy – Executes tasks on each host without interruption
linear strategy – Executes tasks in a linear fashion
abs test – is the path absolute
all test – are all conditions in a list true
any test – is any conditions in a list true
changed test – did the task require changes
contains test – does the list contain this element
directory test – does the path resolve to an existing directory
exists test – does the path exist, follow symlinks
failed test – did the task fail
falsy test – Pythonic false
file test – does the path resolve to an existing file
finished test – Did async task finish
link test – does the path reference existing symbolic link
link_exists test – does the path exist, no follow
match test – Does string match regular expression from the start
mount test – does the path resolve to mount point
nan test – is this not a number (NaN)
reachable test – Task did not end due to unreachable host
regex test – Does string match regular expression from the start
same_file test – compares two paths to see if they resolve to the same filesystem object
search test – Does string match a regular expression
skipped test – Was task skipped
started test – Was async task started
subset test – is the list a subset of this other list
success test – check task success
superset test – is the list a superset of this other list
truthy test – Pythonic true
unreachable test – Did task end due to the host was unreachable
uri test – is the string a valid URI
url test – is the string a valid URL
urn test – is the string a valid URN
vault_encrypted test – Is this an encrypted vault
version test – compare version strings
host_group_vars vars – In charge of loading group_vars and host_vars
cli_backup module – Back up device configuration from network devices over network_cli
cli_command module – Run a cli command on cli-based network devices
cli_config module – Push text based configuration to network devices over network_cli
grpc_config module – Fetch configuration/state data from gRPC enabled target hosts.
grpc_get module – Fetch configuration/state data from gRPC enabled target hosts.
net_get module – Copy a file from a network device to Ansible Controller
net_ping module – Tests reachability using ping from a network device
net_put module – Copy a file from Ansible Controller to a network device
netconf_config module – netconf device configuration
netconf_get module – Fetch configuration/state data from NETCONF enabled network devices.
netconf_rpc module – Execute operations on NETCONF enabled network devices.
network_resource module – Manage resource modules
restconf_config module – Handles create, update, read and delete of configuration data on RESTCONF enabled devices.
restconf_get module – Fetch configuration/state data from RESTCONF enabled devices.
telnet module – Executes a low-down and dirty telnet command
enable become – Switch to elevated permissions on a network device
memory cache – RAM backed, non persistent cache.
default cliconf – General purpose cliconf plugin for new platforms
grpc connection – Provides a persistent connection using the gRPC protocol
httpapi connection – Use httpapi to run command on network appliances
libssh connection – Run tasks using libssh for ssh connection
netconf connection – Provides a persistent connection using the netconf protocol
network_cli connection – Use network_cli to run command on network appliances
persistent connection – Use a persistent unix socket for connection
comp_type5 filter – The comp_type5 filter plugin.
hash_salt filter – The hash_salt filter plugin.
parse_cli filter – parse_cli filter plugin.
parse_cli_textfsm filter – parse_cli_textfsm filter plugin.
parse_xml filter – The parse_xml filter plugin.
pop_ace filter – Remove ace entries from a acl source of truth.
type5_pw filter – The type5_pw filter plugin.
vlan_expander filter – The vlan_expander filter plugin.
vlan_parser filter – The vlan_parser filter plugin.
restconf httpapi – HttpApi Plugin for devices supporting Restconf API
default netconf – Use default netconf plugin to run standard netconf commands as per RFC
acl module – Set and retrieve file ACL information.
at module – Schedule the execution of a command or script file via the at command
authorized_key module – Adds or removes an SSH authorized key
firewalld module – Manage arbitrary ports/services with firewalld
firewalld_info module – Gather information about firewalld
mount module – Control active and configured mount points
patch module – Apply patch files using the GNU patch tool
rhel_facts module – Facts module to set or override RHEL specific facts.
rhel_rpm_ostree module – Ensure packages exist in a RHEL for Edge rpm-ostree based system
rpm_ostree_upgrade module – Manage rpm-ostree upgrade transactions
seboolean module – Toggles SELinux booleans
selinux module – Change policy and state of SELinux
synchronize module – A wrapper around rsync to make common tasks in your playbooks quick and easy
sysctl module – Manage entries in sysctl.conf.
cgroup_perf_recap callback – Profiles system activity of tasks and full execution using cgroups
debug callback – formatted stdout/stderr display
json callback – Ansible screen output as JSON
jsonl callback – Ansible screen output as JSONL (lines in json format)
profile_roles callback – adds timing information to roles
profile_tasks callback – adds time information to tasks
skippy callback – Ansible screen output that ignores skipped status
timer callback – Adds time to play stats
csh shell – C shell (/bin/csh)
fish shell – fish shell (/bin/fish)
cli_parse module – Parse cli output or text using a variety of parsers
fact_diff module – Find the difference between currently set facts
update_fact module – Update currently set facts
validate module – Validate data with provided criteria
cidr_merge filter – This filter can be used to merge subnets or individual addresses.
consolidate filter – Consolidate facts together on common attributes.
fact_diff filter – Find the difference between currently set facts
from_xml filter – Convert given XML string to native python dictionary.
get_path filter – Retrieve the value in a variable using a path
hwaddr filter – HWaddr / MAC address filters
index_of filter – Find the indices of items in a list matching some criteria
ip4_hex filter – This filter is designed to convert IPv4 address to Hexadecimal notation with optional delimiter.
ipaddr filter – This filter is designed to return the input value if a query is True, else False.
ipcut filter – This filter is designed to get 1st or last few bits of IP address.
ipmath filter – This filter is designed to do simple IP math/arithmetic.
ipsubnet filter – This filter can be used to manipulate network subnets in several ways.
ipv4 filter – To filter only Ipv4 addresses Ipv4 filter is used.
ipv6 filter – To filter only Ipv6 addresses Ipv6 filter is used.
ipv6form filter –
ipwrap filter – This filter is designed to Wrap IPv6 addresses in [ ] brackets.
keep_keys filter – Keep specific keys from a data recursively.
macaddr filter – macaddr / MAC address filters
network_in_network filter – This filter returns whether an address or a network passed as argument is in a network.
network_in_usable filter – The network_in_usable filter returns whether an address passed as an argument is usable in a network.
next_nth_usable filter – This filter returns the next nth usable ip within a network described by value.
nthhost filter – This filter returns the nth host within a network described by value.
param_list_compare filter – Generate the final param list combining/comparing base and provided parameters.
previous_nth_usable filter – This filter returns the previous nth usable ip within a network described by value.
reduce_on_network filter – This filter reduces a list of addresses to only the addresses that match a given network.
remove_keys filter – Remove specific keys from a data recursively.
replace_keys filter – Replaces specific keys with their after value from a data recursively.
slaac filter – This filter returns the SLAAC address within a network for a given HW/MAC address.
to_paths filter – Flatten a complex object into a dictionary of paths and values
to_xml filter – Convert given JSON string to XML
usable_range filter – Expand the usable IP addresses
validate filter – Validate data with provided criteria
get_path lookup – Retrieve the value in a variable using a path
index_of lookup – Find the indices of items in a list matching some criteria
to_paths lookup – Flatten a complex object into a dictionary of paths and values
validate lookup – Validate data with provided criteria
in_any_network test – Test if an IP or network falls in any network
in_network test – Test if IP address falls in the network
in_one_network test – Test if IP address belongs in any one of the networks in the list
ip test – Test if something in an IP address or network
ip_address test – Test if something in an IP address
ipv4 test – Test if something is an IPv4 address or network
ipv4_address test – Test if something is an IPv4 address
ipv4_hostmask test – Test if an address is a valid hostmask
ipv4_netmask test – Test if an address is a valid netmask
ipv6 test – Test if something is an IPv6 address or network
ipv6_address test – Test if something is an IPv6 address
ipv6_ipv4_mapped test – Test if something appears to be a mapped IPv6 to IPv4 mapped address
ipv6_sixtofour test – Test if something appears to be a 6to4 address
ipv6_teredo test – Test if something appears to be an IPv6 teredo address
loopback test – Test if an IP address is a loopback
mac test – Test if something appears to be a valid MAC address
multicast test – Test for a multicast IP address
private test – Test if an IP address is private
public test – Test if an IP address is public
reserved test – Test for a reserved IP address
resolvable test – Test if an IP or name can be resolved via /etc/hosts or DNS
subnet_of test – Test if a network is a subnet of another network
supernet_of test – Test if a network is a supernet of another network
unspecified test – Test for an unspecified IP address
validate test – Validate data with provided criteria
